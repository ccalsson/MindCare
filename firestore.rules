rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    function hasRole(role) {
      return isSignedIn() && request.auth.token.role == role;
    }

    match /users/{uid} {
      allow read, write: if isOwner(uid);
    }

    match /emotions/{uid}/entries/{entryId} {
      allow read, write: if isOwner(uid);
    }

<<<<<<< HEAD
    match /billing/{uid}/subscriptions/{id} {
=======
    match /billing/{uid}/{docId} {
>>>>>>> 34fe70b (chore: fix pubspec merge, add Firebase seed + storage upload scripts, deployable indexes and rules)
      allow read, write: if isOwner(uid);
    }

    match /professionals/{pid} {
<<<<<<< HEAD
      allow read: if true; // public profile
=======
      allow read: if true;
>>>>>>> 34fe70b (chore: fix pubspec merge, add Firebase seed + storage upload scripts, deployable indexes and rules)
      allow write: if hasRole('admin');
    }

    match /analytics/{docId} {
      allow write: if hasRole('admin');
      allow read: if false;
    }

    match /audit_logs/{docId} {
      allow read, write: if hasRole('admin');
    }
  }
}
